instalar postgres
y crear el db postgresql
postgresql-contrib

sudo -u posgres psql
\l
\q quitar

alter user posgres with password 'password123'; /// esto es para cambiar la contrasenia por default no tiene
db name postgresql
user posgres
pasword pasword123

1.- npm init -y crear un package jason
2.- npm install express pg pg-hstore sequelize morgan
// morgan http peticiones @babel/polyfill
// modulos de desarrollo
npm install --save-dev @babel/core @babel/node @babel/cli @babel/preset-env nodemon -D
3.- crear .babelrc en directorio principal
    Contenido:
	un objeto para traducir js moderno a estable

	{
	"presets": [
	"@babel/preset-env"
]
}

4.- crear la carpeta "src" y dentro index.js
5.- crear los comandos en package.json "scripts" 
	"dev": "nodemon src/index.js exec babel-node",
	"build": "babel src --out-dir dist",
	"start": "node dist/index.js"

Nota para ejecutar es npm run build y npm start

6.- crear folder SQL en directorio principal
7 .- carpeta controllers,models,database, routers dentro de "SRC"
8 dentro de src crear app.js e index.js file
9.-Dentro de app.... morgan se encarga de mostrar por consola lo que va llegando y json para interpretar este tipo de archivos
10 inicializar express app
-middlewares
-routes
11 index usar app y con await conectar el port


//////////////
crear base de datos con postgreSQL

en SQL folder 
1.- Crear db.sql

Create TABLE IF NOT EXIST projects(
	id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        neame...  
)
 esto solo para entender el proceso

2.- en database folder crear database.js

import sequelize

inicializar objeto Sequeize

new Sequelize{
	nombre de la base de datos,
	nombre del usuario de login,
	password,
	{
		host: 'localhost',
		dialecto:'tipo de datos nos conectamos postgres, sqlite etc'
		pool:{
			max:"maximas conexiones 
			min 
requiere
idle}
logging: para ver lo que va pasando pero con morgan ya se ve que esta pasando por eso se pone false

}
}
3.- crear los modelos de las tablas en la carpeta models
import sequelize modulo y objeto

definir nombre del modelo
y el esquema de la tabla
exportar tabla

crear esquema de las otras tablas a usar y relacionarlas con llave forania y hasmany y belong to

///////////
REST API
Crear rutas
en el folder routes


en la carpeta controllers estaran los scripts para crear y manejar los datos en conjunto con las rutas


